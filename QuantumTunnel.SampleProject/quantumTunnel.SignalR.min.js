var QT=function(n){function u(t){n.logConnection(t)}function f(t){switch(t.newState){case $.signalR.connectionState.connecting:n.logConnection("connecting");break;case $.signalR.connectionState.connected:n.logConnection("connected");break;case $.signalR.connectionState.reconnecting:n.logConnection("reconnecting");break;case $.signalR.connectionState.disconnected:n.logConnection("disconnected")}}var t={},i,r;if(t.config={},n.rtc=n.rtc||{},typeof $.hubConnection!="function")return n.logError(n.resources.noSignalR),n;t.config={transport:null,serverUrl:"/",hubName:"linker",init:!0},function(n){var i=$("script[quantum-tunnel-rtc]");i&&t.config&&n.configReader(t.config,i)}(n);i=function(){var i=$.hubConnection();return i.logging=n.config.logLowLevelConnectionEvents,i.url=t.config.serverUrl,i.error(u),i.stateChanged(f),i}();r=i.createHubProxy(t.config.hubName);t.on=function(n,t){r.on(n,t)};t.invoke=function(){return r.invoke.apply(r,arguments)};t.connect=function(){return i.start(t.config.transport?{transport:t.config.transport}:null)};n.rtc.broadcast=function(i,r,u){t.connect().done(function(){var f="broadcasting : "+i+"."+r+" ";n.logBroadcasting(f+"Started");t.invoke("Broadcast",{moduleName:i,listenerName:r,params:u}).done(function(){n.logBroadcasting(f+"Succeeded")}).fail(function(t){n.logError(f+"Failed : "+t)})})};t.on("execListener",function(t){n.executeListener(t)});return n.getTransportType=function(){return i.transport.name},n.disconnect=function(){i.stop()},n.rtc.start=function(){t.connect()},n}(QT||{});